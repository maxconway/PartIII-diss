% !TeX root = dissertation.Rnw 
\chapter{Results}
This chapter details the results of the investigation, in terms of the properties of the design strategies used, and the biological properties of the strains designed.
\todo{section references}

\section{technical evaluation}
This section discusses each strategy individually, before comparing their relative merits.

\subsection{GDMO}
<<echo=FALSE>>=
#load
data(GDMO)
# find natural production
natural<-unique(GDMO[GDMO$knockouts==0,c('strain','biomass','maxsyn','minsyn')])
colnames(natural)<-c('strain','natbiomass','natmaxsyn','natminsyn')
GDMO<-merge(GDMO,natural)
# normalize biomass
GDMO$nbiomass <- GDMO$biomass/GDMO$natbiomass
GDMO$nmaxsyn <- GDMO$maxsyn/GDMO$natmaxsyn
GDMO$nminsyn <- GDMO$minsyn/GDMO$natminsyn
@
A number of different evolution runs were completed for each strain, summarised in table~\ref{tab:GDMOevals}. As can be seen, more evaluations were done for smaller population and generation sizes, in order to find the importance of these two factors on running time and performance.

<<GDMOevals,echo=FALSE,results='asis'>>=
require(xtable,quietly=TRUE)
runs=aggregate(GDMO[,c('strain','pop','generation','id')],by=list(GDMO$id),max)[,c('strain','pop','generation')]
runs$population=runs$pop
print(xtable(runs[,c('strain','population','generation')],caption='GDMO evaluations completed',label='tab:GDMOevals'))
@

\subsection{Convergence time}
The first property investigated was how quickly convergence to a stable solution was achieved. 
This is difficult for multi-objective optimization, since pareto fronts are not generally comparable.
\todo{check if hypervolume already defined}

Figure~\ref{fig:convergence} shows hypervolume against generation for a number of runs of GDMO. This shows that most convergence occured quickly---within \num{200} generations. 
This works out at around \SI{\Sexpr{mean(GDMO[GDMO$generation==200&GDMO$strain=='sulfurreducens','walltime'])}}{\second}.

The investigation of G. Sulfurreducens with \num{1000} generations in particular shows one of the disadvantages of an evolutionary algorithm, and many other global optimization algorithms: since the algorithm is constantly searching for a better solution, if we stop it at an arbitrary point then there is no guarantee that the solution at this point is the best available. 

To ensure that the final front is the best possible, three approaches are possible:
\begin{enumerate}
\item Simply take the maximum value. This is not ideal since the best pareto front overall may miss helpful solutions.
\item find the non-dominated front of the union of a number of good solutions. This approach was used in the end, since it is relatively simple but effective and can be performed retrospectively.
\item A simulated annealing style approach where mutation rate decreases over time. I obtained an open-source version of the NSGA-II algorithm, the core of GDMO, and implemented this approach on this with an exponentially dropping mutation rate. Ultimately, I decided to take approach 2 to avoid the introduction of an unnecessary extra parameter.
\end{enumerate}

\todo{not necessarily here, but do write about 3d pareto fronts}
\begin{figure}
\label{fig:convergence}
<<echo=FALSE>>=
runs=aggregate(GDMO[,c('id','strain','pop','generation')],by=list(GDMO$id),max)
runs=runs[order(runs$strain,runs$generation,runs$pop),]
source('./data/dominated.R',local=TRUE)
source('./data/hypervolumeMonteCarlo.R',local=TRUE)
plot(NULL,NULL,
     xlab='generation',
     ylab='% hypervolume vs wt',
     ylim=c(100,105),
     xlim=c(0,max(GDMO$generation))
)
require('RColorBrewer',quietly=TRUE)
colours=c(brewer.pal(n=nrow(runs[runs$strain=='metallireducens',]),name='Blues'),
          brewer.pal(n=nrow(runs[runs$strain=='sulfurreducens',]),name='Reds')
)
legend('bottomright',paste(runs$strain,' pop=',runs$pop,' gen=',runs$gen),col=colours,pch='l',cex=0.5)
for(j in 1:nrow(runs)){
  w=GDMO[GDMO$id==runs[j,'id'],]
  measureat = seq(1,max(w$generation),max(w$generation)%/%10)
  volume=sapply(measureat,function(i){
    hypervolumeMonteCarlo(w[w$generation==i,c('nbiomass','nmaxsyn','nminsyn')],10)
  })
  lines(measureat,volume/min(volume)*100,col=colours[j])
}
@
\caption{GDMO of G. Sulfurreducens, with population 500}
\end{figure}

\subsubsection{Quality}
Solution quality can only really be evaluated in comparison with other techniques and with the literature.\todo{not done}


\subsection{Comparison}

\section{biological evaluation}
The most interesting  biological data was produced by GDMO, since this was able to show how the pathways altered varied with the solution properties. \todo{actually note this after}However, it is first interesting to note which known engineered strains were replicated.

\subsection{Geobacter Sulfurreducens}
\subsubsection{Fronts}
<<echo=FALSE>>=
       source('./data/dominated.R',local=TRUE)
       s<-GDMO[GDMO$strain=='sulfurreducens'&GDMO$generation==500&GDMO$pop==500,]

       h<-s[,c('nbiomass','nmaxsyn')]
       h<-h[!dominated(h,h),]
       l<-s[,c('nbiomass','nminsyn')]
       l<-l[!dominated(l,l),]
@
Figure~\ref{fig:sulfurreducensmax} shows a roughly linear tradeoff between maximum reduction potential and biomass generation is possible, up to a maximum of a \SI{\Sexpr{(max(h$nmaxsyn))*100}}{\percent} of wild type yield, at the expense of \SI{\Sexpr{min(h$nbiomass)}}{\percent} biomass production.
This is as expected, as the organism has a constant amount of energy available for either growth or electron exchange.

In figure~\ref{fig:sulfurreducensmin}, we again see an expected general negative gradient. 
However, only a small increase over wild type of \SI{\Sexpr{(max(l$nminsyn))*100}}{\percent} was possible while maintaining viability.
This is likely to be because, while there are likely to be many knockouts that limit the energy that can be used in biomass generation, and so leave a surplus reduction potential, knockout strategies that actually force higher reduction require much more extensive modifications.
Figure~\ref{fit:sulfurreducensmin} shows a pronounced jump at around 0.935 in the biomass axis. This is discussed further in Section~\ref{sec:gskink}. \label{sec:gskinkfind}


\begin{figure}
\label{fig:sulfurreducensmax}
<<echo=FALSE>>=
       plot(nmaxsyn~nbiomass,h,xlab='biomass',ylab='reduction potential')
@
\caption{Pareto front of maximum reduction potential for Geobacter Sulfurreducens, normalized against wild type}
\end{figure}

\todo{these don't actually look how I've said they do}

\begin{figure}
\label{fig:sulfurreducensmin}
<<echo=FALSE>>=
       plot(nminsyn~nbiomass,l,xlab='biomass',ylab='reduction potential')
@
\caption{Pareto front of minimum reduction potential for Geobacter Sulfurreducens, normalized against wild type}
\end{figure}

\subsubsection{Knockouts}
<<echo=FALSE>>=
id=with(runs,unique(runs[strain=='sulfurreducens'&pop==500&generation==500,'id']))
source('./data/getNames.R',local=TRUE)
source('./data/getChromosomes.R',local=TRUE)
names=getNames('geo_s_react.reduced')
chromosomes=getChromosomes(id)
colnames(chromosomes)<-c((names),c('maxsyn','minsyn','biomass','front','crowding','?'))
chromosomes[,grepl('GSU.*',colnames(chromosomes))]<-chromosomes[,grepl('GSU.*',colnames(chromosomes))]==1
chromosomes<-cbind(chromosomes,GDMO[GDMO$id==id&GDMO$generation==500,c('knockouts','nmaxsyn','nminsyn','nbiomass')])
#principle components
require(stats,quietly=TRUE)
pc<-princomp(chromosomes[,c('nmaxsyn','nminsyn','nbiomass')])
chromosomes$pos<-pc$scores[,1]
@
One major advantage of GDMO is that the shape of the pareto front can yield information about the properties of pathways. 
Figure~\ref{fig:geoSknockouts} shows the knockouts in each member of the final population. 
Knockout vectors are ordered by the first principle component of their objectives, which lies roughly along the Pareto front, while genes are ordered according to a manual subsystem clustering.

<<fig.label='fig:geoSknockouts', fig.cap='knockouts in G. Sulfurreducens>>=
image(x=1:500,
      y=1:212,
      data=as.matrix(chromosomes[sort.list(-chromosomes$pos),1:212]),
      col=c('ghostwhite','red'),
      ylab='genes',
      xlab='strain'
      )
@

Figure~\ref{fig:geoSknockouts} does show an obvious banding pattern in the gene axis, showing the essentiality of certain gene groups, and a slight trend in the strains as they move away from wild type.

\subsubsection{Minimum synthesis front shape}
In order to get deeper insight, we need to look at more focussed groups of strains;
Figure~\ref{fig:sulfurreducensmin} \label{sec:gskink} shows a pronounced kink in the biomass vs minimum synthesis Pareto front of G. Sulfurreducens. \todo{find these in chart}
To look at this in more detail, we can extract the relevant sets of strains and compare the their knockouts.
<<>>=
A <- merge(chromosomes,l) # A is all strains in the minsyn vs biomass pareto front
A <- A[0.92<A$nbiomass & A$nbiomass<0.94, ] #with 0.92 < biomass < 0.94
low <- A[A$nminsyn<1.003,grepl('GSU.*',colnames(A))]  # select knockout vectors with synthesis < 1.003
high <- A[A$nminsyn>1.003,grepl('GSU.*',colnames(A))] # select knockout vectors with synthesis > 1.003
diff <- colSums(high)-colSums(low)        # knockout difference between knockout vector sets
k1 = head(diff[order(-abs(diff))],20)             # most relevant knockouts
@
Of course, just seeing the genes that are knocked out is not as helpful as seeing the actual reactions affected. To find these, we can refer back to the original gene annotations of the metabolic network.
<<>>=
geo_s_react=read.delim('./data/geo_s_react.txt',)
geo_s_react[geo_s_react$GeneAssociation %in% names(k1),c('OfficialName','Equation')]
@
\todo{find out if these should by synthetic lethal}

\subsubsection{Common modifications}
Another obvious comparison to make is to find the most common knockouts in the engineered strains.
<<>>=
#create wildtype
engineered <- chromosomes[,grepl('GSU.*',colnames(chromosomes))] # get engineered strains
diff <- colSums(engineered)        # numer of times each knockout was used
k2 = diff[order(-abs(diff))]
@
These can then be plotted to find the most important.
<<>>=
plot(k2,xlab='modification index',ylab='usages')      # most common knockouts
abline(v=10)
@
This shows that 10 knockouts (to the left of the line) are highly common. These may be of particular intrest.
<<>>= 
geo_s_react[geo_s_react$GeneAssociation %in% names(head(k2,10)),c('OfficialName','Equation')]
@

\todo{show that in E-coli, known strategies have been replicated}
